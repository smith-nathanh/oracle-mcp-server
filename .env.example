# Oracle Database MCP Server Configuration
# Copy this file to .env and update with your database details

# Required: Oracle Database Connection String
#
# FOR DOCKER SETUP (recommended for testing):
# See docker-example/ directory for complete Docker setup with Oracle database
# Copy docker-example/.env.docker to .env to use the Docker test database
#
# FOR EXISTING ORACLE DATABASE:
# Use one of these connection string formats:

# Simple format (recommended):
DB_CONNECTION_STRING="username/password@hostname:port/service_name"

# Examples:
# DB_CONNECTION_STRING="hr/password@localhost:1521/XEPDB1"
# DB_CONNECTION_STRING="app_user/password@db.company.com:1521/PROD"
#
# URL format (alternative):
# DB_CONNECTION_STRING="oracle+oracledb://username:password@hostname:port/?service_name=service_name"

# Optional: Separate connection for metadata/comments (defaults to DB_CONNECTION_STRING)
# COMMENT_DB_CONNECTION_STRING="username/password@hostname:port/service_name"

# Optional: Whitelist specific tables (comma-separated, leave empty for all tables)
# Example: TABLE_WHITE_LIST="EMPLOYEES,DEPARTMENTS,JOBS,LOCATIONS"
TABLE_WHITE_LIST=""

# Optional: Whitelist specific columns (comma-separated, format: TABLE.COLUMN)
# Example: COLUMN_WHITE_LIST="EMPLOYEES.EMPLOYEE_ID,EMPLOYEES.EMAIL,DEPARTMENTS.DEPARTMENT_NAME"
COLUMN_WHITE_LIST=""

# Optional: Maximum number of rows returned by queries (default: 100)
QUERY_LIMIT_SIZE="100"

# Optional: Maximum number of rows for export operations (default: 10000)
MAX_ROWS_EXPORT="10000"

# Optional: Enable debug logging (default: False)
DEBUG="False"

# Optional: Oracle Client Library Directory (for thick mode features)
# Only needed if you want to use thick mode with Oracle Client libraries
# ORACLE_CLIENT_LIB_DIR="/opt/oracle/instantclient_21_8"

#==============================================================================
# QUICK START OPTIONS:
#==============================================================================

# üê≥ DOCKER SETUP (easiest for testing):
# 1. cd docker-example
# 2. docker-compose up -d  
# 3. cp .env.docker ../.env
# 4. cd .. && uv run oracle-mcp-server --version

# üè¢ EXISTING ORACLE DATABASE:
# 1. Update DB_CONNECTION_STRING above with your database details
# 2. Test with: uv run oracle-mcp-server --version

# üìñ For detailed setup instructions, see:
#    - docker-example/README.md (Docker setup)
#    - docs/SETUP_GUIDE.md (general setup)

# With connection pooling options (for high-traffic scenarios)
# Add these parameters to your connection string:
# &pool_class=SessionPool&pool_size=10&pool_max_overflow=20